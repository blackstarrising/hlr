mistake1
In Zeile 12 wird buf nur lokal angelegt und der Pointer wird nach dem Aufruf wieder gelöscht. Problem kann durch static gelöst werden, da dann der Pointer erhalten bleibt.

mistake2
In Zeile 20 muss der Index des Arrays geändert werden, damit der int beim Aufrufen an der richtigen Stelle steht.

mistake3
In Zeile 28 wird ein Pointer zu einem int erzeugt. Dieser wird wie in mistake1 nach Aufruf der Funktion wieder gelöscht. Durch malloc(sizeof(int)) kann Speicher indirekt allokiert werden und er ist nach Funktionsaufruf noch verfügbar. Man muss ihn aber mit free wieder freigeben.

mistake4
In Zeile 39 wurde buf durch free wieder freigegeben. Somit kann auch kein Pointer zurückgegeben werden. Außerdem muss in Zeile 38 der Wert 4 an den Index 0 von buf geschrieben werden.


Am Ende von main muss der Speicher der vorher mit melloc reseviert wurde wieder freigegeben werden. Wir haben leider verstanden, wie das mit dem array von ints bei mistake2 funktioniert. Die anderen frees für p[2] und p[3] habne wir gemacht.
